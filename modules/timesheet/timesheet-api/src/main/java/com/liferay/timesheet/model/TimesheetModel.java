/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.timesheet.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Timesheet service. Represents a row in the &quot;TIME_Timesheet&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.timesheet.model.impl.TimesheetModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.timesheet.model.impl.TimesheetImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Timesheet
 * @see com.liferay.timesheet.model.impl.TimesheetImpl
 * @see com.liferay.timesheet.model.impl.TimesheetModelImpl
 * @generated
 */
@ProviderType
public interface TimesheetModel extends BaseModel<Timesheet> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a timesheet model instance should use the {@link Timesheet} interface instead.
	 */

	/**
	 * Returns the primary key of this timesheet.
	 *
	 * @return the primary key of this timesheet
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this timesheet.
	 *
	 * @param primaryKey the primary key of this timesheet
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the timesheet ID of this timesheet.
	 *
	 * @return the timesheet ID of this timesheet
	 */
	public long getTimesheetId();

	/**
	 * Sets the timesheet ID of this timesheet.
	 *
	 * @param timesheetId the timesheet ID of this timesheet
	 */
	public void setTimesheetId(long timesheetId);

	/**
	 * Returns the date from of this timesheet.
	 *
	 * @return the date from of this timesheet
	 */
	public Date getDateFrom();

	/**
	 * Sets the date from of this timesheet.
	 *
	 * @param dateFrom the date from of this timesheet
	 */
	public void setDateFrom(Date dateFrom);

	/**
	 * Returns the user ID of this timesheet.
	 *
	 * @return the user ID of this timesheet
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this timesheet.
	 *
	 * @param userId the user ID of this timesheet
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this timesheet.
	 *
	 * @return the user uuid of this timesheet
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this timesheet.
	 *
	 * @param userUuid the user uuid of this timesheet
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the date to of this timesheet.
	 *
	 * @return the date to of this timesheet
	 */
	public Date getDateTo();

	/**
	 * Sets the date to of this timesheet.
	 *
	 * @param dateTo the date to of this timesheet
	 */
	public void setDateTo(Date dateTo);

	/**
	 * Returns the approved of this timesheet.
	 *
	 * @return the approved of this timesheet
	 */
	public boolean getApproved();

	/**
	 * Returns <code>true</code> if this timesheet is approved.
	 *
	 * @return <code>true</code> if this timesheet is approved; <code>false</code> otherwise
	 */
	public boolean isApproved();

	/**
	 * Sets whether this timesheet is approved.
	 *
	 * @param approved the approved of this timesheet
	 */
	public void setApproved(boolean approved);

	/**
	 * Returns the open of this timesheet.
	 *
	 * @return the open of this timesheet
	 */
	public boolean getOpen();

	/**
	 * Returns <code>true</code> if this timesheet is open.
	 *
	 * @return <code>true</code> if this timesheet is open; <code>false</code> otherwise
	 */
	public boolean isOpen();

	/**
	 * Sets whether this timesheet is open.
	 *
	 * @param open the open of this timesheet
	 */
	public void setOpen(boolean open);

	/**
	 * Returns the submitted on of this timesheet.
	 *
	 * @return the submitted on of this timesheet
	 */
	public Date getSubmittedOn();

	/**
	 * Sets the submitted on of this timesheet.
	 *
	 * @param submittedOn the submitted on of this timesheet
	 */
	public void setSubmittedOn(Date submittedOn);

	/**
	 * Returns the approved on of this timesheet.
	 *
	 * @return the approved on of this timesheet
	 */
	public Date getApprovedOn();

	/**
	 * Sets the approved on of this timesheet.
	 *
	 * @param approvedOn the approved on of this timesheet
	 */
	public void setApprovedOn(Date approvedOn);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Timesheet timesheet);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Timesheet> toCacheModel();

	@Override
	public Timesheet toEscapedModel();

	@Override
	public Timesheet toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}